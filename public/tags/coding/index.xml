<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Coding on Not So Fungible </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://jamieduerden.co.uk/tags/coding/</link>
    <language>en-gb</language>
    
    
    <updated>Wed, 30 Mar 2016 16:16:18 BST</updated>
    
    <item>
      <title>Sloggit</title>
      <link>https://jamieduerden.co.uk/post/sloggit/</link>
      <pubDate>Wed, 30 Mar 2016 16:16:18 BST</pubDate>
      
      <guid>https://jamieduerden.co.uk/post/sloggit/</guid>
      <description>&lt;p&gt;&lt;strong&gt;I felt like&lt;/strong&gt; building something less samey than another test website or to-do list app, so I&amp;rsquo;m working on a text-based adventure. As they say, the two hardest things in computer science are naming things and cache invalidation; consequently this little app labours under the uninspired name of &lt;a href=&#34;https://jamieduerden.co.uk/project/sloggit&#34;&gt;&amp;ldquo;Sloggit&amp;rdquo;&lt;/a&gt;, until I can think of a better one.&lt;/p&gt;

&lt;p&gt;For the moment there are no caches involved, thankfully.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Daft Software Names!</title>
      <link>https://jamieduerden.co.uk/post/hello-hugo/</link>
      <pubDate>Fri, 18 Mar 2016 00:58:10 UTC</pubDate>
      
      <guid>https://jamieduerden.co.uk/post/hello-hugo/</guid>
      <description>&lt;p&gt;Following my successful move to new hosting, there&amp;rsquo;s been a bit of a hiatus in my blogging. This has mainly come about because I&amp;rsquo;ve been doing some actual useful work, at least some of which has involved some &lt;a href=&#34;https://jamieduerden.co.uk/project/&#34;&gt;coding&lt;/a&gt;, which is always entertaining.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been in need of a good low-level (ish) language for some time - my D is poor, my C/C++ nonexistent, and my Java not exactly stellar. The biggest problem has been finding one which I like, and which compares favourably in terms of readability to Ruby, which has been my favourite language (slightly ahead of Python) for quite some time. &lt;a href=&#34;https://jamieduerden.co.uk/post/learning-me-a-haskell&#34;&gt;Haskell&lt;/a&gt;, while beautiful and elegant when it&amp;rsquo;s going right, is a complete pain when it&amp;rsquo;s going wrong. Moreover it&amp;rsquo;s not as fast as many other languages, and isn&amp;rsquo;t especially marketable. I&amp;rsquo;ll be keeping at it, though, because it has taught me more about how good code &lt;em&gt;works&lt;/em&gt; than any other language.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve looked at Clojure, Elixir, Swift and C# (for a variety of different reasons), but finally settled on Go. It&amp;rsquo;s still not as heavily syntactically-sugared as I&amp;rsquo;d like, but it&amp;rsquo;s clean, tidy and fast, and compiles across all platforms to nice statically-linked binaries, which some others (Haskell and D, in particular) definitely do not. Attempting to cross-compile Haskell code for Windows on Linux was a nightmare.&lt;/p&gt;

&lt;p&gt;As a first pass, I&amp;rsquo;ve moved both the site and the blog over to &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; - previously the site was slightly messy AngularJS while the blog ran on Ghost. I have no issues with Ghost, it&amp;rsquo;s a lovely piece of software, but I was never entirely happy with Angular as a framework. Mostly because I don&amp;rsquo;t like JavaScript very much.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve taken the opportunity to update many of my old blog posts, reducing typos and so on, and to expand greatly my Projects section. That&amp;rsquo;s somewhere between vanity and marketing, I think&amp;hellip;&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re seeing this, it worked, so that&amp;rsquo;s a decent start. As a bonus, the whole thing ought to be a little bit faster, though it&amp;rsquo;s not really big enough for that to be a concern.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Project Euler</title>
      <link>https://jamieduerden.co.uk/post/project-euler/</link>
      <pubDate>Fri, 14 Aug 2015 19:37:53 UTC</pubDate>
      
      <guid>https://jamieduerden.co.uk/post/project-euler/</guid>
      <description>&lt;p&gt;&lt;strong&gt;If you&amp;rsquo;re considering&lt;/strong&gt; teaching yourself to code, or even just to code in a new language, I heartily recommend you take a look at &lt;a href=&#34;http://projecteuler.net&#34;&gt;Project Euler&lt;/a&gt;. It&amp;rsquo;s essentially a collection of user-submitted maths questions, sufficiently tricky as to require solving by a computer, but sufficiently unintensive that programs capable of solving them can run in a reasonable time.&lt;/p&gt;

&lt;p&gt;The mathematics themselves are done by your code, but the real challenge lies in thinking through the necessary algorithms and program flow such that you can build something which fulfils the requirements. It demands that you understand the problem, the nature of the solution, and your language of choice well enough to communicate the requirements to the computer.&lt;/p&gt;

&lt;p&gt;Some are fast; a flash of insight and a couple of minutes writing and you have the answer. Some can take hours or days of plotting out and trying different avenues of attack, especially at the higher difficulty levels.&lt;/p&gt;

&lt;p&gt;I shan&amp;rsquo;t show my work here, as it would defeat the point, but I encourage you to attempt a few problems. As brain exercise goes, it certainly beats Sudoku.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning Me A Haskell</title>
      <link>https://jamieduerden.co.uk/post/learning-me-a-haskell/</link>
      <pubDate>Tue, 11 Aug 2015 22:53:53 UTC</pubDate>
      
      <guid>https://jamieduerden.co.uk/post/learning-me-a-haskell/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Without much&lt;/strong&gt; reason, I decided to try out a functional language. I have two scripting [Python, Ruby] and one imperative [D] at &amp;lsquo;moderate&amp;rsquo; competence. Won&amp;rsquo;t be winning any prizes for code quality, but it&amp;rsquo;s a learning process, and I&amp;rsquo;m finding that as I try out more languages and frameworks, the underlying similarities are more and more obvious.&lt;/p&gt;

&lt;p&gt;There aren&amp;rsquo;t that many straightforward, well supported functional languages out there, so with a recommendation from &lt;a href=&#34;http://sandymaguire.me&#34;&gt;Sandy&lt;/a&gt; I went for Haskell.&lt;/p&gt;

&lt;p&gt;That was yesterday.&lt;/p&gt;

&lt;p&gt;Today I passed my own FizzBuzz test: without using StackOverflow (or similar), from the documentation and recommended starting information&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:95f8786afe1ccbb4e21d3c2667f90d3c:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:95f8786afe1ccbb4e21d3c2667f90d3c:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; alone, write the 3&amp;amp;5 FizzBuzz program in that language. It&amp;rsquo;s not that hard, but it&amp;rsquo;s a little more involved than &amp;lsquo;hello world&amp;rsquo;, and helps with the structure and idioms of a new language.&lt;/p&gt;

&lt;p&gt;Commented for your convenience:&lt;/p&gt;

&lt;pre data-line-numbers class=&#34;line-numbers language-haskell&#34;&gt;
&lt;code class=&#34;language-haskell&#34;&gt;
fizz n = [ n | n &lt;- [0..n], n `mod` 3 == 0] -- Find all the numbers between 0 and n divisible by three
buzz n = [ n | n &lt;- [0..n], n `mod` 5 == 0] -- Find all the numbers between 0 and n divisible by five

genFizzBuzz n
    | n == 0 = show n -- If it&#39;s zero, show zero. This is to fix a peculiarity I found where apparently zero is divisible by everything and thus gets a FizzBuzz.
    | n `elem` fizz n &amp;&amp; n `elem` buzz n = &#34;FizzBuzz&#34;
    | n `elem` fizz n = &#34;Fizz&#34;
    | n `elem` buzz n = &#34;Buzz&#34;
    | otherwise = show n

fizzy n = [genFizzBuzz x | x &lt;- [0..n]] -- This just lets me set the range to have it work in.
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Crappy code, I know. I&amp;rsquo;m sure there are smaller, neater ways of achieving the same thing, but it works and I&amp;rsquo;m pleased. Eight working hours from &amp;lsquo;I should learn this language&amp;rsquo; to this stage via getting the compiler to work on Windows is a new record.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:95f8786afe1ccbb4e21d3c2667f90d3c:1&#34;&gt;In this case &lt;a href=&#34;http://learnyouahaskell.com/&#34;&gt;Learn You A Haskell&lt;/a&gt;. I&amp;rsquo;ve skimmed the whole thing, and am now reading in full. It&amp;rsquo;s not as bizarre as the title implies, unlike &lt;a href=&#34;http://mislav.uniqpath.com/poignant-guide/book/chapter-1.html&#34;&gt;Why&amp;rsquo;s Poignant Guide To Ruby&lt;/a&gt; which is EXACTLY as weird as it sounds.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:95f8786afe1ccbb4e21d3c2667f90d3c:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Progress is made!</title>
      <link>https://jamieduerden.co.uk/post/progress-is-made/</link>
      <pubDate>Thu, 16 Jul 2015 17:45:47 UTC</pubDate>
      
      <guid>https://jamieduerden.co.uk/post/progress-is-made/</guid>
      <description>&lt;p&gt;It doesn&amp;rsquo;t &lt;em&gt;look&lt;/em&gt; like much, but the main site is now nicely configured, and the root URL redirects where it&amp;rsquo;s supposed to&amp;hellip; unfortunately not transparently. Still working on that; apparently .htaccess configurations don&amp;rsquo;t play nice with ngRoute.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also set up &lt;a href=&#34;http://mathjax.org&#34;&gt;MathJax&lt;/a&gt; and &lt;a href=&#34;http://prismjs.com&#34;&gt;Prism&lt;/a&gt;, so when I want to show off crappy code and inaccurate maths, they&amp;rsquo;ll look less crappy and inaccurate.&lt;/p&gt;

&lt;p&gt;This is a learning experience, like anything else. These posts rapidly become out of date; hopefully in a few months I can, as ever, look back and laugh at how &amp;lsquo;stupid&amp;rsquo; I was such a short time ago. @Future!Jamie: Please confirm or deny?
|WhenSend reminder set for 2015-10-01.|&lt;/p&gt;

&lt;p&gt;Working in AngularJS is proving tricky for all sorts of reasons, but it feels a lot less &amp;lsquo;magical&amp;rsquo; than working in Rails. With the latter, a small amount of very neat and readable Ruby code is leveraged into a working site, but without fine-grained control or obvious mechanism being necessary. Javascript is less forgiving, but much more configurable. I&amp;rsquo;m sure once I understand, rather than simply &amp;lsquo;understanding&amp;rsquo; enough to make it work, there will be many more places to go.&lt;/p&gt;

&lt;p&gt;I held off on learning JS for a long time, preferring the friendliness of Python and Ruby. I may live to regret that delay, but so far, upskilling is proving fun.&lt;/p&gt;

&lt;p&gt;Level Up - one skill point.&lt;/p&gt;

&lt;p&gt;Jamie&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
